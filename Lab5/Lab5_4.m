%Аналитическая модель собственного шума в фильтрах с фиксированной запятой

function Hd = Lab5_4
%LAB5_4 Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.14 and DSP System Toolbox 9.16.
% Generated on: 19-Oct-2024 20:27:16

% Butterworth Lowpass filter designed using FDESIGN.LOWPASS.

% All frequency values are normalized to 1.

N  = 4;     % Order
Fc = 0.25;  % Cutoff Frequency

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.lowpass('N,F3dB', N, Fc);
Hd = design(h, 'butter');

% Get the transfer function values.
[b, a] = tf(Hd);

% Convert to a singleton filter.
Hd = dfilt.df2(b, a);

Hd = sos(Hd);

% Get the transfer function values.
[b, a] = tf(Hd);

% Convert to a singleton filter.
Hd = dfilt.df2(b, a);

% Convert the filter to the Direct-Form I structure.
Hd = convert(Hd, 'df1');
% Set the arithmetic property.
set(Hd, 'Arithmetic', 'fixed', ...
    'CoeffWordLength', 16, ...
    'CoeffAutoScale', true, ...
    'ProductMode', 'KeepMSB', ...
    'ProductWordLength', 16, ...
    'AccumMode', 'KeepMSB', ...
    'AccumWordLength', 40, ...
    'OutputWordLength', 16, ...
    'OutputFracLength', 10, ...
    'InputWordLength', 16, ...
    'inputFracLength', 15, ...
    'signed',        true, ...
    'RoundMode',     'convergent', ...
    'OverflowMode',  'Wrap', ...
    'CastBeforeSum', true);

denormalize(Hd);

% [EOF]

figure(1)
plot(noisepsd(Hd))
title('Квантованный фильтр');

Num = [0.0102    0.0408    0.0613    0.0408    0.0102]; %коэффициенты квантованного числителя
Den = [ 1.0000   -1.9684    1.7358   -0.7245    0.1204]; %коэффициенты квантованного знамеятеля

%Расчет теоретичской СПМ собственного шума

w = 0:0.001:1;
Wn=1./((abs(1+Den(2)*exp(-1i.*w)+Den(3)*exp(-1i*2.*w)+Den(4)*exp(-1i*3.*w)+Den(5)*exp(-1i*4.*w))).^2);
figure(2)
plot(w, Wn)
title('Теоретическое распределение СПМ собственного шума');